"""
Textual User Interface
"""

import sys, os, time, threading

import gui, txt_events


##############################

class TXT_GUI(gui.GUI):
    def __init__(self, impl_mod, parent, resfile=None, has_log=True):
        gui.GUI.__init__(self)

        self.is_running = False
        try:
            __import__(self.implementation)
            impl = sys.modules[self.implementation]
            impl.txtSetup(self)
        except Exception, e:
            sys.stderr.write('Application ' + self.implementation +
                             ' not enabled/available\n' + str(e) + '\n')
            sys.exit(1)


    def Run(self):
        self.is_running = True
        try:
            while self.is_running:
                evt = txt_events.pop_evt_queue(0.5) # half second timeout
                if evt:
                    evt.Handle()
        except KeyboardInterrupt:
            self.onExit()


    def onExit(self):
        self.is_running = False
        self.app.log.info('Exiting.')
        self.app.Stop()
        sys.exit(0)

    def onHelp(self):
        pass

    def onAbout(self):
        pass

    def onNotice(self, txt):
        pass

    def onMessage(self, txt, tpl):
        pass
    

## end TXT_GUI
##############################

